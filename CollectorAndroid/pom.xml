<?xml version="1.0" encoding="UTF-8"?>
<!--
	Sapelli data collection platform: http://sapelli.org
	
	Copyright 2012-2014 University College London - ExCiteS group
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	    http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
 -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>sapelli-collector-android</artifactId>
	<name>Sapelli Collector for Android</name>
	<packaging>apk</packaging>
	<parent>
		<groupId>uk.ac.ucl.excites</groupId>
		<artifactId>sapelli</artifactId>
		<version>2.0.0-SNAPSHOT</version>
	</parent>
	
	<properties>
		<!-- Android & support libs version -->
		<!--	Always change Android version & API level together!: -->
		<android.version>5.1.1_r2</android.version>
		<android.api-level>22</android.api-level>
		<android.support.libs.version>22.2.1</android.support.libs.version>
		
		<!-- Build info generation: -->
		<buildinfo.antfile>${project.basedir}/buildinfo.xml</buildinfo.antfile>
		
		<!-- APK signing: -->
		<release.properties.file>${project.basedir}/release.properties</release.properties.file>
		<!-- Must contain these properties: keystore-path, keystore-passwd, key-alias, key-passwd -->
		
		<!-- Internal: -->
		<unsigned.classifier>unsigned</unsigned.classifier>
		<apk.unsigned>${project.build.directory}/${project.artifactId}-unsigned.tmp</apk.unsigned>
		<apk.signed.unaligned>${project.build.directory}/${project.artifactId}-signed-unaligned.tmp</apk.signed.unaligned>
	</properties>
	
	<repositories>
		<repository>
			<id>crashlytics-repo</id>
			<url>http://download.crashlytics.com/maven</url>
		</repository>
		<repository>
			<id>jitpack.io</id>
			<url>https://jitpack.io</url>
		</repository>
	</repositories>
	
	<pluginRepositories>
		<pluginRepository>
			<id>crashlytics-plugin-repo</id>
			<url>http://download.crashlytics.com/maven</url>
		</pluginRepository>
	</pluginRepositories>
	
	<dependencies>
		<dependency>
			<groupId>android</groupId>
			<artifactId>android</artifactId>
			<version>${android.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>uk.ac.ucl.excites</groupId>
			<artifactId>sapelli-library</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.japgolly.android</groupId>
			<artifactId>svg-android</artifactId>
			<version>2.0.6</version>
		</dependency>
		<dependency>
			<groupId>com.crashlytics.android</groupId>
			<artifactId>crashlytics</artifactId>
			<version>[1.1.13,)</version>
		</dependency>
		<!-- <dependency> <groupId>net.rdrei.android.dirchooser</groupId> <artifactId>library</artifactId> 
			<version>1.0-pre-v11</version> <type>aar</type> </dependency> -->
		<!-- <dependency> <groupId>com.dropbox</groupId> <artifactId>dropbox-android-sync-sdk</artifactId> 
			<version>2.1.2</version> <type>apklib</type> </dependency> <dependency> <groupId>com.dropbox</groupId> 
			<artifactId>dropbox-android-sync-sdk</artifactId> <version>2.1.2</version> 
			<type>jar</type> </dependency> -->
	</dependencies>
	
	<profiles>
		<profile>
			<id>eclipse</id>
			<activation>
				<property>
					<name>m2e.version</name>
				</property>
			</activation>
			<properties>
				<eclipse.build.directory>${project.basedir}/bin</eclipse.build.directory>
			</properties>
			<!-- Note: APKs built using Eclipse will have a versionCode derived from the project version.
				 This makes such builds unsuitable for release on Play store because different beta's/rc's
				 of a given version will all get same versionCode. -->
			<dependencies>
				<!-- The CollectorAndroid Eclipse project depends (see project.properties) on these Android
					 Library projects (all in ../Dependencies/) which must opened in the Eclipse workspace: 
						- appcompat-v7
						- materialtabstrip-library
						- afilechooser-library
					Important: All Android Library projects which depend on android-support-v4.jar must have
							   the *same* version it in their 'libs' folder. -->
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>com.simpligility.maven.plugins</groupId>
						<artifactId>android-maven-plugin</artifactId>
						<configuration>
							<destinationManifestFile>${eclipse.build.directory}/AndroidManifest.xml</destinationManifestFile>
							<manifestMerger>
								<versionName>${project.version}-eclipse</versionName>
								<versionCodeUpdateFromVersion>true</versionCodeUpdateFromVersion>
							</manifestMerger>
						</configuration>
					</plugin>
					<plugin>
						<!-- This does not seem to work properly. Possibly we need to disable to fabric eclipse plugin -->
						<groupId>com.crashlytics</groupId>
						<artifactId>crashlytics-maven</artifactId>
						<configuration>
							<androidManifestPath>${eclipse.build.directory}/AndroidManifest.xml</androidManifestPath><!-- bin/ -->
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>maven</id>
			<activation>
				<property>
					<name>!m2e.version</name>
				</property>
			</activation>
			<!-- Note: APKs built on the command-line (i.e. using the maven profile) will
				 have a time-based versionCode value generated by a groovy script below --> 
			<repositories>
				<repository>
					<id>UIQ3</id>
					<url>http://uiq3.sourceforge.net/Repository</url>
				</repository>
			</repositories>
			<dependencies>
				<dependency>
					<groupId>com.android.support</groupId>
					<artifactId>support-v4</artifactId>
					<version>${android.support.libs.version}</version>
					<type>aar</type>
				</dependency>
				<dependency>
					<groupId>com.android.support</groupId>
					<artifactId>appcompat-v7</artifactId>
					<version>${android.support.libs.version}</version>
					<type>aar</type>
				</dependency>
				<dependency>
					<groupId>com.ipaulpro</groupId>
					<artifactId>afilechooser-library</artifactId>
					<version>2.4</version>
					<type>apklib</type>
				</dependency>
				<dependency>
					<groupId>com.jpardogo.materialtabstrip</groupId>
					<artifactId>library</artifactId>
					<version>1.0.9</version>
					<type>aar</type>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.gmaven</groupId>
						<artifactId>gmaven-plugin</artifactId>
						<version>1.5</version>
						<executions>
							<execution>
								<id>set-properties</id>
								<phase>validate</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<source>
										println 'Generating repository path...'
										pom.properties['project.repodir'] = settings['localRepository'] + File.separator + project.groupId.replace('.', File.separator) + File.separator + project.artifactId + File.separator + project.version;
										
										println 'Generating time-based versionCode (= number of hours since 2012-01-01T00:00:00.000Z)...'
										c = Calendar.instance;
										c.clear();
										c.timeZone = TimeZone.getTimeZone("UTC");
										c.set(2012, 0, 1);
										pom.properties['project.time-based-versionCode'] = "" + (int) ((System.currentTimeMillis() - c.timeInMillis) / 1000 / 60 / 60);
									</source>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<inherited>true</inherited>
						<executions>
							<execution>
								<id>delete-buildinfo</id>
								<phase>validate</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<echo>Deleting buildinfo.xml to make sure it will be re-generated...</echo>
										<delete file="${project.basedir}/res/values/buildinfo.xml" />
									</target>
								</configuration>
							</execution>
							<execution>
								<!-- avoid AMP from tripping over if the (empty) "libs" folder gets recreated (e.g. by the Fabric Eclipse plugin): -->
								<id>delete-empty-libs-dir</id>
								<phase>validate</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<echo>Delete ${project.basedir}/libs if it exists and is empty...</echo>
										<delete includeemptydirs="true" failonerror="false">
											<fileset dir="${project.basedir}/libs" excludes="**/*" />
										</delete>
									</target>
								</configuration>
							</execution>
							<execution>
								<id>delete-useless-apks</id>
								<phase>install</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<echo>Remove useless APKs from repo...</echo>
										<!-- The repository contains a jar renamed to apk, maven installs it
											 this way because the release/debug apk is installed with classifier,
											 because there is no "unclassified apk" maven takes the jar instead -->
										<echo> JAR renamed to APK:</echo>
										<delete file="${project.repodir}${file.separator}${project.build.finalName}-${project.version}.${project.packaging}" />
										<echo> Unsigned APK (release nor debug):</echo>
										<delete file="${project.repodir}${file.separator}${project.build.finalName}-${project.version}-${unsigned.classifier}.${project.packaging}" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.simpligility.maven.plugins</groupId>
						<artifactId>android-maven-plugin</artifactId>
						<configuration>
							<!-- destinationManifestFile: target/ (default) -->
							<manifestMerger>
								<versionName>${project.version}</versionName>
								<versionCode>${project.time-based-versionCode}</versionCode><!-- generated by groovy script above -->
							</manifestMerger>
						</configuration>
					</plugin>
					<plugin>
						<groupId>com.crashlytics</groupId>
						<artifactId>crashlytics-maven</artifactId>
						<configuration>
							<androidManifestPath>${project.build.directory}/AndroidManifest.xml</androidManifestPath><!-- target/ -->
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>properties-maven-plugin</artifactId>
						<version>1.0-alpha-2</version>
						<executions>
							<execution>
								<id>read-release-properties</id>
								<phase>initialize</phase>
								<goals>
									<goal>read-project-properties</goal>
								</goals>
								<configuration>
									<files>
										<file>${release.properties.file}</file>
									</files>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<inherited>true</inherited>
						<executions>
							<execution>
								<id>copy-before-signing</id>
								<phase>package</phase>
								<configuration>
									<target>
										<copy file="${apk.unsigned}" tofile="${apk.signed.unaligned}" overwrite="true" />
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jarsigner-plugin</artifactId>
						<version>1.3.2</version>
						<executions>
							<execution>
								<id>signing</id>
								<goals>
									<goal>sign</goal>
									<goal>verify</goal>
								</goals>
								<phase>package</phase>
								<inherited>true</inherited>
								<configuration>
									<archive>${apk.signed.unaligned}</archive>
									<removeExistingSignatures>true</removeExistingSignatures>
									<keystore>${keystore-path}</keystore>
									<storepass>${keystore-passwd}</storepass>
									<alias>${key-alias}</alias>
									<keypass>${key-passwd}</keypass>
									<sigfile>CERT</sigfile>
									<arguments>
										<argument>-sigalg</argument>
										<argument>MD5withRSA</argument>
										<argument>-digestalg</argument>
										<argument>SHA1</argument>
									</arguments>
									<verbose>false</verbose>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.simpligility.maven.plugins</groupId>
						<artifactId>android-maven-plugin</artifactId>
						<inherited>true</inherited>
						<configuration>
							<release>true</release>
							<sign>
								<!-- don't sign at all (not even w/ debug key) APK will
									 be signed w/ release key by the jarsigner plugin -->
								<debug>false</debug>
							</sign>
							<outputApk>${apk.unsigned}</outputApk>
							<classifier>${unsigned.classifier}</classifier>
							<attachJar>true</attachJar>
							<attachSources>false</attachSources>
							<zipalign>
								<skip>false</skip>
								<verbose>false</verbose>
								<inputApk>${apk.signed.unaligned}</inputApk>
								<!-- this is the end product (signed with release key & zip aligned): -->
								<outputApk>${project.build.directory}/${project.build.finalName}.apk</outputApk>
								<classifier>release</classifier>
							</zipalign>
							<proguard>
								<!-- TODO -->
								<skip>true</skip>
							</proguard>
						</configuration>
						<executions>
							<execution>
								<id>alignApk</id>
								<phase>package</phase>
								<goals>
									<goal>zipalign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<!-- disable default deploy plugin (for now) -->
						<artifactId>maven-deploy-plugin</artifactId>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
					<plugin>
						<!-- deploy apk using crashlytics Beta distribution -->
						<groupId>com.crashlytics</groupId>
						<artifactId>crashlytics-maven</artifactId>
						<executions>
							<execution>
								<id>distribute-beta</id>
								<phase>deploy</phase>
								<goals>
									<goal>UploadDistribution</goal>
								</goals>
								<configuration>
									<betaDistributionReleaseNotesFilePath>${project.basedir}/beta-notes.txt</betaDistributionReleaseNotesFilePath>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	
	<build>
		<sourceDirectory>src</sourceDirectory>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>generate-buildinfo</id>
						<phase>initialize</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<ant antfile="${buildinfo.antfile}" target="generateBuildInfo"/>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.simpligility.maven.plugins</groupId>
				<artifactId>android-maven-plugin</artifactId>
				<version>4.3.0</version>
				<configuration>
					<!-- General config: -->
					<sdk>
						<!-- <path>${sdk-home}</path> -->
						<platform>${android.api-level}</platform>
					</sdk>
					<includeLibsJarsFromAar>true</includeLibsJarsFromAar>
					<deleteConflictingFiles>true</deleteConflictingFiles>
					<undeployBeforeDeploy>true</undeployBeforeDeploy>
					<androidManifestFile>${project.basedir}/AndroidManifest.xml</androidManifestFile>
					<assetsDirectory>${project.basedir}/assets</assetsDirectory>
					<resourceDirectory>${project.basedir}/res</resourceDirectory>
					<!-- Alternative way to avoid AMP tripping over if the (empty) "libs" folder gets recreated (e.g. by the Fabric Eclipse plugin).
						 Commented out in favour of ant approach (deleting libs on initialize) -->
					<!-- <nativeLibrariesDirectory>${project.basedir}/libs</nativeLibrariesDirectory> -->
					<!-- Debug config (overriden in release profile): -->
					<release>false</release>
					<classifier>debug</classifier>
					<sign>
						<!-- sign with debug key -->
						<debug>true</debug>
					</sign>
					<attachJar>false</attachJar>
					<attachSources>false</attachSources>
				</configuration>
				<extensions>true</extensions>
				<!-- <dependencies>
					<dependency>
						<groupId>net.sf.proguard</groupId>
						<artifactId>proguard-base</artifactId>
						<version>5.0</version>
					</dependency>
				</dependencies> -->
				<executions>
					<execution>
						<!-- This execution serves to make sure an updated/merged manifest file is present in
							 target/ by the time crashlytics:GenerateResources runs (also in initialize phase) -->
						<id>pre-generate-manifest</id>
						<phase>initialize</phase>
						<goals>
							<goal>manifest-merger</goal>
						</goals>
					</execution>
					<execution>
						<!-- (For now) we also let the manifest-merger run in its default phase (process-resources)
							 because this may be necessary for certain libraries to be correctly integrated.
							 TODO ask AMP people if this is indeed necessary. -->
						<id>generate-manifest</id>
						<goals>
							<goal>manifest-merger</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.crashlytics</groupId>
				<artifactId>crashlytics-maven</artifactId>
				<version>1.10.1</version>
				<executions>
					<execution>
						<id>GenerateResources</id>
						<goals>
							<goal>GenerateResources</goal>
							<!-- Note: Contrary to what the name suggests this goal is bound by default
								 to the 'initialize' phase (i.e. *not* to the 'generate-resources' phase) -->
						</goals>
					</execution>
					<execution>
						<id>CleanupResources</id>
						<goals>
							<goal>CleanupResources</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-antrun-plugin</artifactId>
										<versionRange>[1.7,)</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>false</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.crashlytics</groupId>
										<artifactId>crashlytics-maven</artifactId>
										<versionRange>[1.10.1,)</versionRange>
										<goals>
											<goal>GenerateResources</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
										<!-- See comment in eclipse profile -->
										<!--<execute>
											<runOnIncremental>false</runOnIncremental>
										</execute>-->
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.simpligility.maven.plugins</groupId>
										<artifactId>android-maven-plugin</artifactId>
										<versionRange>[4.0.0,)</versionRange>
										<goals>
											<goal>manifest-merger</goal>
											<goal>emma</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>false</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
